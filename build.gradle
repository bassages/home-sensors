plugins {
    id 'java'
    id 'org.springframework.boot' version '2.0.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'jacoco'
    id "org.sonarqube" version '2.6.2'
}

if (System.getenv("TRAVIS_TAG") != null) {
    version = System.getenv("TRAVIS_TAG")
} else {
    version = 'x.x.x'
}

jar {
    baseName = 'home-sensors'
}

jacoco {
    toolVersion = '0.8.2'
}

sonarqube {
    properties {
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.junit.reportsPath", "build/test-results"
        property "sonar.jacoco.reportPath", "build/test-reports/jacoco.exec"
    }
}

sourceCompatibility = 1.10
targetCompatibility = 1.10
compileJava.options.encoding = 'UTF-8'

compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Werror"
}

compileTestJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Werror"
}

repositories {
    jcenter()
}

wrapper {
    gradleVersion = '4.10.2'
}

dependencies {
    compile('commons-io:commons-io:2.6')
    compile('org.apache.commons:commons-lang3:3.8.1')
    compile('org.apache.httpcomponents:httpclient:4.5.6')
    compile('joda-time:joda-time:2.10')
    compile('com.fasterxml.jackson.core:jackson-core:2.8.6')
    compile('com.fasterxml.jackson.core:jackson-databind:2.8.6')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.6')
    compile('net.sf.expectit:expectit-core:0.9.0')
    compile('com.jcraft:jsch:0.1.54')
    compile('javax.annotation:javax.annotation-api:1.2')
    compile('javax.inject:javax.inject:1')
    compile('org.springframework.boot:spring-boot-starter-logging')
    compile("org.springframework.boot:spring-boot-devtools")
    
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile('org.assertj:assertj-joda-time:2.2.0')
    testCompile('org.assertj:assertj-core:3.11.1')
    testCompile('nl.jqno.equalsverifier:equalsverifier:3.0')
}
