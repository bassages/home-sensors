plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'jacoco'
    id "org.sonarqube" version '3.3'
}

if (System.getenv("GITHUB_TAG") != null) {
    version = System.getenv("GITHUB_TAG")
    logger.info('Creating release from GitHub action workflow. Version: ' + version)
} else {
    version = 'x.x.x'
}

jar {
    archiveBaseName = 'home-sensors'
}

jacoco {
    toolVersion = '0.8.6'
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled false
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = 'full'
    }
}

sonarqube {
    properties {
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.junit.reportsPath", "build/test-results"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.organization", "bassages-github"
        property "sonar.projectKey", "home-sensors"
    }
}

java {
    toolchain{
        languageVersion = JavaLanguageVersion.of(17)
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Werror"
}

compileTestJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Werror"
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor('org.projectlombok:lombok:1.18.22')
    compileOnly('org.projectlombok:lombok:1.18.22')

    implementation('commons-io:commons-io:2.11.0')
    implementation('org.apache.commons:commons-lang3:3.12.0')
    implementation('org.apache.httpcomponents:httpclient:4.5.13')
    implementation('net.sf.expectit:expectit-core:0.9.0')
    implementation('com.jcraft:jsch:0.1.55')
    implementation('javax.annotation:javax.annotation-api:1.3.2')
    implementation('javax.inject:javax.inject:1')

    // for next dependencies, the version are managed by Spring Boot,
    // see https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-dependency-versions.html
    compileOnly("org.springframework.boot:spring-boot-devtools")

    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.boot:spring-boot-starter-logging')

    implementation('com.fasterxml.jackson.core:jackson-core')
    implementation('com.fasterxml.jackson.core:jackson-databind')
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation('org.assertj:assertj-core:3.21.0')
    testImplementation('nl.jqno.equalsverifier:equalsverifier:3.7.2')
}
